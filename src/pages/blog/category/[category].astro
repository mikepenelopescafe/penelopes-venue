---
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  const categories = [...new Set(blogPosts.map(post => post.data.category))];
  
  return categories.map(category => ({
    params: { category },
    props: { 
      posts: blogPosts.filter(post => post.data.category === category),
      category 
    },
  }));
}

const { posts, category } = Astro.props;

// Sort posts by date
const sortedPosts = posts.sort((a, b) => {
  const dateA = a.data.publishDate?.valueOf() || 0;
  const dateB = b.data.publishDate?.valueOf() || 0;
  return dateB - dateA;
});

// Category display names
const categoryNames = {
  'weddings': 'Weddings',
  'events': 'Events',
  'planning-tips': 'Planning Tips',
  'venue-features': 'Venue Features',
  'testimonials': 'Success Stories',
  'seasonal': 'Seasonal',
};

const categoryName = categoryNames[category] || category;

// SEO metadata
const seo = {
  title: `${categoryName} | Penelope's Venue Blog`,
  description: `Browse our collection of ${categoryName.toLowerCase()} articles, tips, and inspiration for your perfect event at Penelope's Venue.`,
  keywords: `${category}, venue blog, event planning, wedding tips, Penelope's Venue`,
};
---

<Layout title={seo.title} description={seo.description} keywords={seo.keywords}>
  <main class="min-h-screen">
    <header class="bg-gradient-to-b from-brand-cream to-white py-16 px-6">
      <div class="max-w-6xl mx-auto">
        <div class="flex items-center gap-2 text-sm text-brand-forest/60 mb-4">
          <a href="/" class="hover:text-brand-forest transition-colors">Home</a>
          <span>/</span>
          <a href="/blog" class="hover:text-brand-forest transition-colors">Blog</a>
          <span>/</span>
          <span class="text-brand-forest">{categoryName}</span>
        </div>
        
        <h1 class="text-4xl md:text-5xl font-serif text-brand-forest mb-4">
          {categoryName}
        </h1>
        <p class="text-lg text-brand-forest/70">
          {sortedPosts.length} article{sortedPosts.length !== 1 ? 's' : ''}
        </p>
      </div>
    </header>
    
    <section class="max-w-6xl mx-auto px-6 py-12">
      <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
        {sortedPosts.map(post => {
          const formattedDate = post.data.publishDate?.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
          });
          
          return (
            <article class="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow overflow-hidden">
              {post.data.image && (
                <img 
                  src={post.data.image.src} 
                  alt={post.data.image.alt}
                  class="w-full h-48 object-cover"
                />
              )}
              <div class="p-6">
                <h2 class="text-xl font-serif text-brand-forest mb-2 line-clamp-2">
                  <a href={`/blog/${post.slug}`} class="hover:text-brand-gold transition-colors">
                    {post.data.title}
                  </a>
                </h2>
                <p class="text-brand-forest/70 mb-4 line-clamp-3">
                  {post.data.description}
                </p>
                <div class="flex justify-between items-center text-sm text-brand-forest/60">
                  {formattedDate && (
                    <time datetime={post.data.publishDate?.toISOString()}>
                      {formattedDate}
                    </time>
                  )}
                  <a 
                    href={`/blog/${post.slug}`} 
                    class="text-brand-gold hover:text-brand-gold/80 font-medium transition-colors"
                  >
                    Read More â†’
                  </a>
                </div>
              </div>
            </article>
          );
        })}
      </div>
    </section>
  </main>
</Layout>
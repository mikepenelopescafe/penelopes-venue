---
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';

export const prerender = true;

export async function getStaticPaths() {
  const pages = await getCollection('pages');
  return pages.map(page => ({
    params: { slug: page.slug },
    props: { page }
  }));
}

// Handle dynamic routing
const { page } = Astro.props;

const { Content } = await page.render();

// SEO metadata
const seo = {
  title: page.data.title,
  description: page.data.description,
  keywords: page.data.keywords?.join(', '),
  canonical: page.data.canonical || Astro.url.href,
  ogImage: page.data.ogImage,
  noIndex: page.data.noIndex || false,
};

---

<Layout title={seo.title} description={seo.description} keywords={seo.keywords} canonical={seo.canonical}>
  <div class="min-h-screen">
    {page.data.businessSchema && (
      <script type="application/ld+json" set:html={JSON.stringify({
        '@context': 'https://schema.org',
        '@type': 'LocalBusiness',
        name: page.data.businessSchema.name,
        address: {
          '@type': 'PostalAddress',
          streetAddress: page.data.businessSchema.address.street,
          addressLocality: page.data.businessSchema.address.city,
          addressRegion: page.data.businessSchema.address.state,
          postalCode: page.data.businessSchema.address.zipCode,
        },
        telephone: page.data.businessSchema.phone,
        email: page.data.businessSchema.email,
        url: page.data.businessSchema.website || seo.canonical,
      })} />
    )}
    {page.data.faqs && (
      <script type="application/ld+json" set:html={JSON.stringify({
        '@context': 'https://schema.org',
        '@type': 'FAQPage',
        mainEntity: page.data.faqs.map((f) => ({
          '@type': 'Question',
          name: f.q,
          acceptedAnswer: { '@type': 'Answer', text: f.a },
        })),
      })} />
    )}
    {page.data.hero && (
      <section class="relative bg-gradient-to-b from-brand-cream to-white py-20 px-6">
        <div class="max-w-6xl mx-auto text-center">
          <h1 class="text-5xl md:text-6xl font-serif text-brand-forest mb-6">
            {page.data.hero.headline}
          </h1>
          {page.data.hero.subheadline && (
            <p class="text-xl md:text-2xl text-brand-forest/80 mb-8">
              {page.data.hero.subheadline}
            </p>
          )}
          <a
            href={page.data.hero.ctaLink}
            class="inline-block bg-brand-gold hover:bg-brand-gold/90 text-white px-8 py-4 rounded-md text-lg font-medium transition-colors"
          >
            {page.data.hero.ctaText}
          </a>
        </div>
      </section>
    )}

    <article class="prose prose-lg max-w-4xl mx-auto px-6 py-16">
      <Content />
    </article>


    {page.data.sections && (
      <div class="space-y-16 pb-16">
        {page.data.sections.map((section) => (
          <section class="max-w-6xl mx-auto px-6">
            <h2 class="text-3xl font-serif text-brand-forest mb-6">{section.title}</h2>
            <div class="prose prose-lg max-w-none">
              <p>{section.content}</p>
            </div>
          </section>
        ))}
      </div>
    )}
  </div>
</Layout>
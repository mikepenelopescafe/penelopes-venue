---
export interface Props {
  class?: string;
}

const { class: className = '' } = Astro.props;
---

<div class={`scroll-hint ${className}`}>
  <div class="mouse-container">
    <div class="mouse">
      <div class="wheel"></div>
    </div>
  </div>
  <div class="arrow-container">
    <svg class="chevron" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M7 10L12 15L17 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </div>
</div>

<style>
  .scroll-hint {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    cursor: pointer;
  }
  
  .mouse-container {
    width: 26px;
    height: 40px;
  }
  
  .mouse {
    width: 26px;
    height: 40px;
    border: 2px solid oklch(0.75 0.06 80 / 0.5);
    border-radius: 13px;
    position: relative;
  }
  
  .wheel {
    width: 4px;
    height: 8px;
    background: oklch(0.75 0.06 80 / 0.6);
    border-radius: 2px;
    position: absolute;
    top: 8px;
    left: 50%;
    transform: translateX(-50%);
    animation: scroll-wheel 2s ease-in-out infinite;
  }
  
  .arrow-container {
    color: oklch(0.75 0.06 80 / 0.6);
  }
  
  .chevron {
    animation: bounce-arrow 2s ease-in-out infinite;
  }
  
  @keyframes scroll-wheel {
    0% {
      opacity: 1;
      top: 8px;
    }
    100% {
      opacity: 0;
      top: 20px;
    }
  }
  
  @keyframes bounce-arrow {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(5px);
    }
    60% {
      transform: translateY(3px);
    }
  }
  
  .scroll-hint:hover .mouse {
    border-color: oklch(0.75 0.06 80);
  }
  
  .scroll-hint:hover .wheel {
    background: oklch(0.75 0.06 80);
  }
  
  .scroll-hint:hover .chevron {
    color: oklch(0.75 0.06 80);
  }
</style>

<script>
  document.querySelector('.scroll-hint')?.addEventListener('click', () => {
    window.scrollTo({
      top: window.innerHeight,
      behavior: 'smooth'
    });
  });
</script>
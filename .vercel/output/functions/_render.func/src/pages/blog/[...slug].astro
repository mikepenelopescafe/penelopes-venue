---
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';

export const prerender = false;

// Handle dynamic routing in server mode
const { slug } = Astro.params;

// Get the blog post dynamically based on the slug
let post;
try {
  const blogPosts = await getCollection('blog');
  const targetSlug = Array.isArray(slug) ? slug.join('/') : slug;
  post = blogPosts.find(p => p.slug === targetSlug);
  
  // If no post found, return 404
  if (!post) {
    return Astro.redirect('/404');
  }
} catch (error) {
  console.error('Error loading blog post:', error);
  return Astro.redirect('/404');
}

const { Content } = await post.render();

const formattedDate = post.data.publishDate?.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

// Calculate reading time if not provided
const readingTime = post.data.readingTime || Math.ceil(post.body.split(' ').length / 200);

// SEO metadata
const seo = {
  title: post.data.title,
  description: post.data.description,
  keywords: post.data.keywords?.join(', '),
  canonical: post.data.canonical || Astro.url.href,
  ogImage: post.data.ogImage || post.data.image?.src,
  article: {
    publishedTime: post.data.publishDate,
    modifiedTime: post.data.updateDate,
    author: post.data.author,
    tags: post.data.tags,
  },
};
---

<Layout title={seo.title} description={seo.description} keywords={seo.keywords} canonical={seo.canonical}>
  <article class="min-h-screen">
    <header class="bg-gradient-to-b from-brand-cream to-white py-16 px-6">
      <div class="max-w-4xl mx-auto">
        <div class="flex items-center gap-2 text-sm text-brand-forest/60 mb-4">
          <a href="/blog" class="hover:text-brand-forest transition-colors">Blog</a>
          <span>/</span>
          <a href={`/blog/category/${post.data.category}`} class="hover:text-brand-forest transition-colors capitalize">
            {post.data.category.replace('-', ' ')}
          </a>
        </div>
        
        <h1 class="text-4xl md:text-5xl font-serif text-brand-forest mb-6">
          {post.data.title}
        </h1>
        
        <div class="flex flex-wrap items-center gap-4 text-sm text-brand-forest/70">
          <span>By {post.data.author}</span>
          {formattedDate && (
            <>
              <span>•</span>
              <time datetime={post.data.publishDate?.toISOString()}>
                {formattedDate}
              </time>
            </>
          )}
          <span>•</span>
          <span>{readingTime} min read</span>
        </div>
        
        {post.data.tags && (
          <div class="flex flex-wrap gap-2 mt-6">
            {post.data.tags.map(tag => (
              <span class="px-3 py-1 bg-brand-sage/10 text-brand-forest text-sm rounded-full">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </header>
    
    {post.data.image && (
      <div class="max-w-4xl mx-auto px-6 py-8">
        <img 
          src={post.data.image.src} 
          alt={post.data.image.alt}
          class="w-full rounded-lg shadow-lg"
        />
        {post.data.image.caption && (
          <p class="text-sm text-brand-forest/60 mt-2 text-center italic">
            {post.data.image.caption}
          </p>
        )}
      </div>
    )}
    
    <div class="prose prose-lg prose-brand max-w-4xl mx-auto px-6 py-8">
      <Content />
    </div>
    
    <footer class="max-w-4xl mx-auto px-6 py-12 border-t">
      <div class="flex justify-between items-center">
        <a 
          href="/blog" 
          class="text-brand-forest hover:text-brand-gold transition-colors"
        >
          ← Back to Blog
        </a>
        <a 
          href="/contact" 
          class="inline-block bg-brand-gold hover:bg-brand-gold/90 text-white px-6 py-3 rounded-md font-medium transition-colors"
        >
          Book Your Event
        </a>
      </div>
    </footer>
  </article>
</Layout>